# Generated by Django 4.1.5 on 2023-04-17 12:44

from django.db import migrations, models
import django.db.models.deletion
import management.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('date_of_birth', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('type', models.CharField(choices=[('Payroll', 'Payroll'), ('I9', 'I9'), ('Regular', 'Regular')], default='Regular', max_length=10)),
                ('zip_code', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Stand By', 'Stand By'), ('Do Not Hire', 'Do Not Hire'), ('Active', 'Active'), ('Inactive', 'Inactive'), ('Undefined', 'Undefined')], default='Undefined', max_length=15)),
                ('application_status', models.CharField(choices=[('FrontDesk', 'FrontDesk'), ('No Application', 'No Application'), ('Regular Application', 'Regular Application'), ('Southeast', 'Southeast'), ('Human Resources', 'Human Resources'), ('Undefined', 'Undefined')], default='Undefined', max_length=20)),
                ('quickbooks_status', models.CharField(choices=[('Ready', 'Ready'), ('Not Hired', 'Not Hired'), ('New Employee', 'New Employee'), ('Update Personal Information', 'Update Personal Information'), ('Update Address', 'Update Address'), ('Update to Inactive', 'Update to Inactive'), ('Update to Active', 'Update to Active')], default='Not Hired', max_length=30)),
                ('date_created', models.DateTimeField(default=management.models.current_time)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.city')),
            ],
            options={
                'verbose_name': 'Company Employee',
                'unique_together': {('phone_number', 'date_of_birth')},
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.department')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reference', models.CharField(blank=True, max_length=50)),
                ('Start_date', models.DateField()),
                ('End_date', models.DateField()),
                ('Regular_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Regular_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Overtime_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Overtime_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Total_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Extra', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Total_gross', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Status', models.CharField(max_length=20)),
                ('Payment_date', models.DateField(blank=True, null=True)),
                ('Withdrawn_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.DecimalField(decimal_places=2, max_digits=5)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('allergic_to', models.CharField(max_length=100)),
                ('diseases_suffered', models.CharField(max_length=100)),
                ('received_workers_compensation', models.CharField(max_length=100)),
                ('received_surgery_for_fracture', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='location')),
                ('address', models.CharField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.city')),
            ],
        ),
        migrations.CreateModel(
            name='JobHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.job')),
            ],
        ),
        migrations.CreateModel(
            name='FrequentPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='Employee_head',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employeeWithHead', to='management.employee')),
                ('head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='head', to='management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Emergency_contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('relationship', models.CharField(max_length=20)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
            ],
            options={
                'verbose_name': 'Emergency Contact',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Application', 'Application'), ('Southeast', 'Southeast'), ('Form', 'Form'), ('Passport', 'Passport'), ('Driver license', 'Driver license'), ('ID card', 'ID card')], max_length=20)),
                ('date_of_expiration', models.DateField(blank=True, null=True)),
                ('file', models.FileField(upload_to='employee_documents/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.employee')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.location'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_state', to='management.state'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_available_to_work', models.CharField(choices=[('Monday to Friday', 'Monday to Friday'), ('Monday to Saturday', 'Monday to Saturday'), ('Monday to Sunday', 'Monday to Sunday')], max_length=20)),
                ('can_travel', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('can_work_nights', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('can_background_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('position_to_apply', models.CharField(choices=[('Manager', 'Manager'), ('Housekeeping', 'Housekeeping'), ('Houseman', 'Houseman'), ('Community Areas', 'Community Areas'), ('Housekeeping Supervisor', 'Housekeeping Supervisor'), ('Housekeeping Inspector', 'Housekeeping Inspector'), ('Cook', 'Cook'), ('Precook', 'Precook'), ('Bartender', 'Bartender'), ('Steward', 'Steward'), ('Front desk', 'Front desk'), ('Guess services', 'Guess services'), ('Maintenance', 'Maintenance'), ('All the positions', 'All the positions'), ('Other', 'Other')], max_length=25)),
                ('experience', models.CharField(max_length=500)),
                ('english_level', models.CharField(choices=[('None', 'None'), ('Basic', 'Basic'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced')], max_length=12)),
                ('studies', models.CharField(choices=[('None', 'None'), ('High school', 'High school'), ('University', 'University')], max_length=12)),
                ('specialty_of_studies', models.CharField(blank=True, max_length=50)),
                ('military_service', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_employee', to='management.employee')),
            ],
        ),
        migrations.CreateModel(
            name='AccountingStatus',
            fields=[
            ],
            options={
                'verbose_name': 'Accounting Status',
                'verbose_name_plural': 'Accounting Status',
                'ordering': ['updated_at'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.employee',),
        ),
        migrations.CreateModel(
            name='EmployeeInterview',
            fields=[
            ],
            options={
                'verbose_name': 'Interview',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.employee',),
        ),
        migrations.CreateModel(
            name='EmployeeManagement',
            fields=[
            ],
            options={
                'verbose_name': 'Employee Management',
                'verbose_name_plural': 'Employee Management',
                'ordering': ['date_created'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.employee',),
        ),
        migrations.CreateModel(
            name='MyEmployeeSection',
            fields=[
            ],
            options={
                'verbose_name': 'My employee',
                'ordering': ['-status'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.employee',),
        ),
        migrations.CreateModel(
            name='Recruiting',
            fields=[
            ],
            options={
                'verbose_name': 'Recruiting',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('management.employee',),
        ),
        migrations.CreateModel(
            name='Employee_job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_job_employee', to='management.employee')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job', to='management.job')),
            ],
            options={
                'verbose_name': 'Employee Job',
                'unique_together': {('employee', 'job')},
            },
        ),
    ]
